# zsh being installed via homebrew leads to some directories used for autocomplete
# being considered insecure by zsh, this disables that check since we trust homebrew
export ZSH_DISABLE_COMPFIX=true
export EDITOR=nvim
export BAT_THEME="Solarized (light)"
export DOTFILES_DIR=$HOME/dotfiles

alias tma="tmux a"
alias dc="docker compose"
alias tf="terraform"
alias k="kubectl"
alias eks="eksctl"
alias gdc="git diff --cached"
alias gds="git diff --stat"
alias ytop="ytop -c 'default-dark'"
alias lg="lazygit"
alias ld="lazydocker"
alias packersync="nvim --headless -c 'autocmd User PackerComplete quitall' -c 'PackerSync'"
alias cuid="node -r cuid -e 'console.log(require(\"cuid\")());' | tr -d '\n' | pbcopy"
alias ccb="git branch --no-color --show-current | tr -d '\n' | pbcopy"

function tm {
  rootdir=$(pwd)
  if [ ! -z "$1" ]; then
    rootdir=$(echo "$1" | sed 's:/*$::')
  fi
  session_name="${rootdir##*/}"
  if [ -z "$TMUX" ]; then
    tmux new -A -s $session_name -c $rootdir
  else
    tmux has-session -t $session_name
    if [ $? != 0 ]; then
      tmux new -A -c $rootdir -s $session_name -d
    fi
    tmux switch -t $session_name
  fi
}

function rand {
  count=$1
  if [ -z "$count" ]; then
    count=8
  fi
  date +%s | shasum | head -c$1
}

function gittmp {
  repo_uri=$1
  if [ -z "$1" ]; then
    echo "must provide a repo to clone"
    return 1
  fi

  newdir=$(mktemp -d)
  git clone $1 $newdir

  session_name="gittmp-$(rand 4)"
  tmux new -A -s $session_name -c $newdir -d
  tmux switch -t $session_name
}

function syncsys {
  cd $DOTFILES_DIR
  git pull --rebase
  make
  cd -
}

function mdp() {
  # Requires Markdown Viewer extension
  # - https://chrome.google.com/webstore/detail/markdown-viewer/ckkdlimhmcjmikdlpkmbgfkaikojcbjk?hl=en
  open -a '/Applications/Google Chrome.app' $1
}

function gbrowse() {
  branch=$(git branch --show-current)
  if [ -z "$branch" ]; then
    branch=$(git rev-parse HEAD)
  fi

  origin=$(git remote get-url origin)
  if [[ "$origin" =~ .*gitlab\.com.* ]]; then
    # Assume it's on gitlab
    # gitlab's cli doesn't have a `browse` command, so do this instead
    baseurl=$origin
    if [[ "$origin" =~ ^git@gitlab.* ]]; then
      baseurl=$(echo $origin | sed 's/git@/https:\/\//' | sed 's/\.com:/\.com\//' | sed 's/\.git$//')
    fi
    open "$baseurl/-/blob/$branch/$1"
  else
    # Assume it's on github
    gh browse --branch="$branch" $1
  fi
}

export HOMEBREW_BUNDLE_FILE="$HOME/dotfiles/Brewfile"

export RUST_BIN="$HOME/.cargo/bin"
export PYENV_ROOT="$HOME/.pyenv"

export PATH="$RUST_BIN:$PATH"
export PATH="$PYENV_ROOT/shims:$PATH"

export GOPATH="$HOME/go"
export PATH="$GOPATH/bin:$PATH"

#AWSume alias to source the AWSume script
alias awsume="source awsume"

#Auto-Complete function for AWSume
fpath=(~/.awsume/zsh-autocomplete/ $fpath)
. "$HOME/.cargo/env"
