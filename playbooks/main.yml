---
- hosts: all
  vars:
    home_dir: /Users/sethetter
    dotfiles_dir: "{{ home_dir }}/dotfiles"
    vscode_dir: "{{ home_dir }}/Library/Application Support/Code/User"
    obsidian_dir: "{{ home_dir }}/obsidian"

  tasks:
    - name: Install homebrew libraries
      homebrew:
        name: "{{ item }}"
        state: latest
      ignore_errors: true
      with_items:
        - zsh
        - direnv
        - vim
        - tmux
        - git
        - gh
        - gnupg
        - volta
        - tfenv
        - ripgrep
        - curl
        - wget
        - fzf
        - awscli
        - google-cloud-sdk
        - font-iosevka-nerd-font

    - name: Link tmux.conf
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/tmux.conf"
        dest: "{{ home_dir }}/.tmux.conf"
        state: link

    - name: Install tpm
      ansible.builtin.git:
        repo: "https://github.com/tmux-plugins/tpm"
        dest: "{{ home_dir }}/.tmux/plugins/tpm"

    - name: Link zshrc
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/zshrc"
        dest: "{{ home_dir }}/.zshrc"
        state: link

    - name: Check for oh-my-zsh
      ansible.builtin.shell: "ls {{ home_dir }}/.oh-my-zsh"
      ignore_errors: true
      register: ohmyzsh_check

    - name: Install oh-my-zsh
      ansible.builtin.shell: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      when: ohmyzsh_check.stdout.find('oh-my-zsh.sh') == -1

    - name: Link gitconfig
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/gitconfig"
        dest: "{{ home_dir }}/.gitconfig"
        state: link

    - name: Link gitignore
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/gitignore"
        dest: "{{ home_dir }}/.gitignore"
        state: link

    - name: Link vimrc
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/vimrc"
        dest: "{{ home_dir }}/.vimrc"
        state: link

    - name: Link vscode/settings.json
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/code/settings.json"
        dest: "{{ vscode_dir }}/settings.json"
        state: link

    - name: Link vscode/keybindings.json
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/code/keybindings.json"
        dest: "{{ vscode_dir }}/keybindings.json"
        state: link

    - name: Get obsidian configs
      ansible.builtin.shell: "ls {{ dotfiles_dir }}/obsidian/"
      register: obsidian_configs

    - name: Check for obsidian personal
      stat:
        path: "{{ obsidian_dir }}/personal"
      register: obsidian_personal_dir

    - name: Link obsidian configs (personal)
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/obsidian/{{ item }}"
        dest: "{{ obsidian_dir }}/personal/.obsidian/{{ item }}"
        state: link
      with_items: "{{ obsidian_configs.stdout_lines }}"
      when: obsidian_personal_dir.stat.exists

    - name: Check for obsidian work
      stat:
        path: "{{ obsidian_dir }}/work"
      register: obsidian_work_dir

    - name: Link obsidian configs (work)
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/obsidian/{{ item }}"
        dest: "{{ obsidian_dir }}/work/.obsidian/{{ item }}"
        state: link
      with_items: "{{ obsidian_configs.stdout_lines }}"
      when: obsidian_work_dir.stat.exists
