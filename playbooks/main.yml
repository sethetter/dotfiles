---
- hosts: all
  vars:
    home_dir: /Users/sethetter
    dotfiles_dir: "{{ home_dir }}/dotfiles"
    vscode_dir: "{{ home_dir }}/Library/Application Support/Code/User"
    obsidian_dir: "{{ home_dir }}/obsidian"

  tasks:
    - name: link-brewfile
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/Brewfile"
        dest: "{{ home_dir }}/Brewfile"
        state: link

    - name: link-iterm
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/iterm.json"
        dest: "{{ home_dir }}//Library/Application Support/iTerm2/DynamicProfiles/iterm.json"
        state: link

    - name: vscode-extensions
      ansible.builtin.shell: code --install-extension {{ item }} --force
      with_items:
        - vscodevim.vim
        - golang.go
        - rebornix.ruby
        - 4ops.terraform
        - dbaeumer.vscode-eslint
        - eamodio.gitlens
        - esbenp.prettier-vscode
        - GitHub.vscode-pull-request-github
        - kenhowardpdx.vscode-gist
        - redhat.vscode-yaml
        - rust-lang.rust
        - yzhang.markdown-all-in-one
        - ms-kubernetes-tools.vscode-kubernetes-tools
        - bmewburn.vscode-intelephense-client

    - name: link-tmux-conf
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/tmux.conf"
        dest: "{{ home_dir }}/.tmux.conf"
        state: link

    - name: install-tpm
      ansible.builtin.git:
        repo: "https://github.com/tmux-plugins/tpm"
        dest: "{{ home_dir }}/.tmux/plugins/tpm"

    - name: link-zshrc
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/zshrc"
        dest: "{{ home_dir }}/.zshrc"
        state: link

    - name: check-oh-my-zsh
      ansible.builtin.shell: "ls {{ home_dir }}/.oh-my-zsh"
      ignore_errors: true
      register: ohmyzsh_check

    - name: install-oh-my-zsh
      ansible.builtin.shell: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      when: ohmyzsh_check.stdout.find('oh-my-zsh.sh') == -1

    - name: link-gitconfig
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/gitconfig"
        dest: "{{ home_dir }}/.gitconfig"
        state: link

    - name: link-gitignore
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/gitignore"
        dest: "{{ home_dir }}/.gitignore"
        state: link

    - name: link-vimrc
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/vimrc"
        dest: "{{ home_dir }}/.vimrc"
        state: link

    - name: get-vscode-configs
      ansible.builtin.shell: "ls {{ dotfiles_dir }}/code/"
      register: vscode_configs

    - name: link-vscode-configs
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/code/{{ item }}"
        dest: "{{ vscode_dir }}/{{ item }}"
        state: link
      with_items: "{{ vscode_configs.stdout_lines }}"

    - name: get-obsidian-configs
      ansible.builtin.shell: "ls {{ dotfiles_dir }}/obsidian/"
      register: obsidian_configs

    - name: check-obsidian-personal
      stat:
        path: "{{ obsidian_dir }}/personal"
      register: obsidian_personal_dir

    - name: link-obsidian-personal
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/obsidian/{{ item }}"
        dest: "{{ obsidian_dir }}/personal/.obsidian/{{ item }}"
        state: link
      with_items: "{{ obsidian_configs.stdout_lines }}"
      when: obsidian_personal_dir.stat.exists

    - name: check-obsidian-work
      stat:
        path: "{{ obsidian_dir }}/work"
      register: obsidian_work_dir

    - name: link-obsidian-work
      ansible.builtin.file:
        src: "{{ dotfiles_dir }}/obsidian/{{ item }}"
        dest: "{{ obsidian_dir }}/work/.obsidian/{{ item }}"
        state: link
      with_items: "{{ obsidian_configs.stdout_lines }}"
      when: obsidian_work_dir.stat.exists